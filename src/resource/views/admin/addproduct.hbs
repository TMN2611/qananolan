
{{>admin-header}}
<form>
  <div class="form-group">
    <label for="productName">T√™n s·∫£n ph·∫©m</label>
    <input type="text" class="form-control" id="productName" name='productName' placeholder="Vui l√≤ng nh·∫≠p" required>
  </div>

  <div class="form-group">
    <label for="productPrice">Gi√° s·∫£n ph·∫©m</label>
    <input type="text" class="form-control" id="productPrice" name='productPrice'  placeholder="Vui l√≤ng nh·∫≠p" value='{{product.productPrice}}' required>
     <div class='updateSalePrice btn btn-primary'>C·∫≠p nh·∫≠t gi√° sau khi sale</d>
  </div>

  <div class="form-group">
    <label for="sale">Gi·∫£m gi√° bao nhi√™u ph·∫ßn trƒÉm</label>
    <p class='priceSale'></p>
    <input type="text" class="form-control" id="sale" name='sale' placeholder="Ph·∫ßn trƒÉm gi·∫£m gi√°" min='0' max='100' required value='{{product.sale}}'>
    <div class='updateSalePercent btn btn-primary'>C·∫≠p % gi·∫£m gi√° theo gi√° g·ªëc v√† gi√° ƒë√£ sale</d>
  </div>

  {{!-- Ch·ªâ ·ªü client --}}
  <div class="form-group">
    <label for="sale">Gi√° Sau Khi Sale</label>
    <input type="number" class="form-control" id="priceAfterSale" name='priceAfterSale' placeholder="Gi√° sau khi gi·∫£m">
      <div class='updateOriginPrice btn btn-primary'>C·∫≠p nh·∫≠t gi√° g·ªëc</div>
  </div>
  {{!-- Ch·ªâ ·ªü client --}}

  
  <div class="form-group">
    <label for="productDescription">M√¥ t·∫£ s·∫£n ph·∫©m</label>
    <textarea  type="text"  class="form-control" id="productDescription" name='productDescription' placeholder="M·ªói m√¥ t·∫£ m·ªôt d√≤ng" rows="10" cols="50" required></textarea>
  </div>

  

   <div class="form-group">
    <label for="productColor">M√†u s·∫Øc</label>
    <input type="text" class="form-control" id="productColor" name='productColor' placeholder="Vui l√≤ng nh·∫≠p" required>
  </div>

<p>Gi·ªõi t√≠nh</p>
<div class="d-flex">
    <div class="form-group p-3">
        <label for="productGenderMale">Nam</label>
        <input type="radio" class="form-control" id="productGenderMale" name='productGender' placeholder="M√†u s·∫Øc" value='Male' required>
    </div>
    <div class="form-group p-3">
        <label for="productGenderFemale">N·ªØ</label>
        <input type="radio" class="form-control" id="productGenderFemale" name='productGender' placeholder="M√†u s·∫Øc" value='Female'>
    </div>
    <div class="form-group p-3">
        <label for="productGenderUnisex">Unisex</label>
        <input type="radio" class="form-control" id="productGenderUnisex" name='productGender' placeholder="M√†u s·∫Øc" value='Unisex'>
    </div>
</div>

<p>L√† s·∫£n ph·∫©m ƒë·∫∑c bi·ªát</p>

<div class="d-flex">
    <div class="form-group p-3">
        <label for="specialIsTrue">C√≥</label>
        <input type="radio" class="form-control" id="specialIsTrue" name='isSpecial'  value='true' required>
    </div>
    <div class="form-group p-3">
        <label for="specialIsFalse">Kh√¥ng</label>
        <input type="radio" class="form-control" id="specialIsFalse" name='isSpecial'  value='false'>
    </div>
    
</div>

<p>S·∫£n ph·∫©m c·∫ßn Order tr∆∞·ªõc ?</p>

<div class="d-flex">
    <div class="form-group p-3">
        <label for="preOrderIsTrue">C√≥</label>
        <input type="radio" class="form-control" id="preOrderIsTrue" name='isPreOrder'  value='true' required>
    </div>
    <div class="form-group p-3">
        <label for="preOrderIsFalse">Kh√¥ng</label>
        <input type="radio" class="form-control" id="preOrderIsFalse" name='isPreOrder'  value='false'>
    </div>
    
</div>



  <div class="form-group">
    <label for="productSize">Nh·∫≠p size s·∫£n ph·∫©m</label>
    <input  type="text"  class="form-control" id="productSize" name='productSize' placeholder="S·ª≠ d·ª•ng kho·∫£ng tr·ªëng gi·ªØa c√°c size VD: 35 36 37" value='36 37 38 39 40 41 42 43' required>
  </div>


  
  <div class="form-group">
    <label for="files">Nh·∫≠p ·∫£nh/ video(Kh√¥ng b·∫Øt bu·ªôc):</label>
      <input type="file" name="file" id="files" multiple class='form-control' required> 

  </div>
  <div class="form-group">
    <label for="weight">C√¢n n·∫∑ng</label>
      <input type="number" name="weight" id="weight" class='form-control' required>
  </div>
  <div class="form-group">
    <label for="quantitySold:">L∆∞·ª£ng b√°n</label>
      <input type="text" name="quantitySold" id="quantitySold" class='form-control' required>
  </div>

  <div class="form-group">
    <label for="form-select-brand">Th∆∞∆°ng hi·ªáu</label>

    <select class="form-select-brand" aria-label="Default select example">
        
    </select>
  </div>
  
  

  <button type="submit" class="btn btn-primary">Th√™m s·∫£n ph·∫©m</button>
</form>
{{!-- Show brand --}}
<script>
  const formSelectBrand = document.querySelector('.form-select-brand');
   fetch(`/apis/brand-list`, {
        method: 'GET',
    })
    .then(res => res.json())
    .then(data =>  {
        const html = data.map(el => {
          return `<option value="${el.brandName}">${el.brandName}</option>`
        });
        formSelectBrand.innerHTML = html.join('');
    });
</script>

<script>
      const productPriceElement = document.querySelector('#productPrice');
      const priceSaleElement = document.querySelector('.priceSale');
      const priceAfterSaleInputElement = document.querySelector('#priceAfterSale');
      const saleElement = document.querySelector('#sale');

      const updateSalePercentElement = document.querySelector('.updateSalePercent');
      const updateOriginPriceElement = document.querySelector('.updateOriginPrice ');
      const updateSalePriceElement = document.querySelector('.updateSalePrice ')

      function updateSalePrice () {
          const salePrice = Number(productPriceElement.value) - (Number(productPriceElement.value) * saleElement.value ) / 100;
          console.log("üöÄ ~ file: addproduct.hbs:114 ~ saleElement.addEventListener ~ salePrice:", salePrice)
          
          priceAfterSaleInputElement.value = salePrice;
      }

      function updateOriginPrice () {
          const originPrice = Number(priceAfterSaleInputElement.value)/(1-(Number(saleElement.value)/100))
          console.log("üöÄ ~ file: editproduct.hbs:139 ~ updateOriginPrice ~ originPrice:", Number(saleElement.value))

          productPriceElement.value = originPrice;
      }


      function updateSalePercent () {
            const salePercent = ((Number(productPriceElement.value)-Number(priceAfterSaleInputElement.value))/Number(productPriceElement.value)) * 100;

            saleElement.value = salePercent;
      }

   

      updateOriginPriceElement.addEventListener('click',function(e) {
          e.preventDefault();
          updateOriginPrice()

      })

  

      updateSalePercentElement.addEventListener('click', function(e) {
          e.preventDefault();

          updateSalePercent()
      })


      updateSalePriceElement.addEventListener('click', function(e) {
          e.preventDefault();
          updateSalePrice();
      })



      

</script>


<script>
const form = document.querySelector('form');
form.addEventListener('submit', (e) => {
    
    e.preventDefault();
    // Prevents HTML handling submission
    const productGender = document.querySelector('input[name="productGender"]:checked')?.value || 'Unisex';
    const isSpecial = document.querySelector('input[name="isSpecial"]:checked')?.value;
    const isPreOrder = document.querySelector('input[name="isPreOrder"]:checked')?.value;
    const productName = document.querySelector('input[name="productName"]');
    const productPrice = document.querySelector('input[name="productPrice"]');
    const productDescription = document.querySelector('textarea[name="productDescription"]');
    const sale = document.querySelector('input[name="sale"]');
    const productColor = document.querySelector('input[name="productColor"]');
    const productSize = document.querySelector('input[name="productSize"]');
    const files = document.getElementById("files");
    const brand = document.querySelector('.form-select-brand');
    const weight = document.querySelector('input[name="weight"]');
    const quantitySold = document.querySelector('input[name="quantitySold"]');
    const formData = new FormData();
     
    formData.append('productGender',productGender);
    formData.append('isSpecial',isSpecial);
    formData.append('isPreOrder',isPreOrder);
    formData.append('productName',productName.value);
    formData.append('productPrice',productPrice.value);
    formData.append('productDescription',productDescription.value);
    formData.append('sale',sale.value);
    formData.append('productColor',productColor.value);
    formData.append('productSize',productSize.value);
    formData.append('brand',brand.value);
    formData.append('weight',weight.value);
    formData.append('quantitySold',quantitySold.value);

    // Creates empty formData object

    // Appends value of text input
    for(let i =0; i < files.files.length; i++) {
        formData.append("files", files.files[i]);
    }


    // Appends value(s) of file input
    // Post data to Node and Express server:
    const token = JSON.parse(sessionStorage.getItem('admin-token'));

    fetch(`/admin/them-san-pham/${token}`, {
        method: 'POST',
        body: formData, // Payload is formData object
    })
    .then(res => res.json())
    .then(data => console.log(data));
})
</script>

{{>admin-footer}}


